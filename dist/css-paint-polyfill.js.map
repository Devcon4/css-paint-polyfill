{"version":3,"file":"css-paint-polyfill.js","sources":["../src/util.js","../src/index.js","../src/realm.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Canvas#toBlob() ponyfill */\nexport function canvasToBlob(canvas, callback, type, quality) {\n\tif (canvas.toBlob) return canvas.toBlob(callback, type, quality);\n\n\tlet bin = atob(canvas.toDataURL(type, quality).split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\tcallback(new Blob([arr], { type }));\n}\n\n/** Basically fetch(u).then( r => r.text() ) */\nexport function fetchText(url, callback) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = () => {\n\t\tif (xhr.readyState===4) {\n\t\t\tcallback(xhr.responseText);\n\t\t}\n\t};\n\txhr.open('GET', url, true);\n\txhr.send();\n}\n\n/** Object.defineProperty() ponyfill */\nexport function defineProperty(obj, name, def) {\n\tif (Object.defineProperty) {\n\t\tObject.defineProperty(obj, name, def);\n\t}\n\telse {\n\t\tobj[name] = def.get();\n\t}\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Realm } from './realm';\nimport { defineProperty, fetchText } from './util';\n\nlet paintWorklet;\n\n// Use a getter here (if available) to avoid installing\n// our MutationObserver if the API is never used.\nif (!window.CSS) window.CSS = {};\n\nif (!('paintWorklet' in window.CSS)) {\n\tdefineProperty(window.CSS, 'paintWorklet', {\n\t\tget: () => (paintWorklet || (paintWorklet = new PaintWorklet()))\n\t});\n}\n\nconst GLOBAL_ID = 'css-paint-polyfill';\n\nlet root = document.createElement(GLOBAL_ID);\nroot.style.cssText = 'display: none;';\ndocument.documentElement.appendChild(root);\n\nlet overridesStylesheet = document.createElement('style');\noverridesStylesheet.id = GLOBAL_ID;\nroot.appendChild(overridesStylesheet);\nlet overrideStyles = overridesStylesheet.sheet;\nlet testStyles = root.style;\n\nconst EMPTY_ARRAY = [];\nconst HAS_PAINT = /(paint\\(|-moz-element\\(#paint-|-webkit-canvas\\(paint-|[('\"]blob:[^'\"#]+#paint=|[('\"]data:image\\/paint-)/;\nconst USE_CSS_CANVAS_CONTEXT = 'getCSSCanvasContext' in document;\nconst USE_CSS_ELEMENT = (testStyles.backgroundImage = `-moz-element(#${GLOBAL_ID})`) === testStyles.backgroundImage;\ntestStyles.cssText = '';\n\nlet supportsStyleMutations = true;\nlet raf = window.requestAnimationFrame || setTimeout;\nlet defer = typeof Promise === 'function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\nlet getDevicePixelRatio = () => window.devicePixelRatio || 1;\n\nlet painters = {};\nlet trackedRules = {};\nlet styleSheetCounter = 0;\n\nfunction registerPaint(name, Painter, worklet) {\n\t// if (painters[name]!=null) throw Error(`registerPaint(${name}): name already registered`);\n\tpainters[name] = {\n\t\tworklet,\n\t\tPainter,\n\t\tproperties: Painter.inputProperties ? [].slice.call(Painter.inputProperties) : [],\n\t\tbit: 0,\n\t\tinstances: []\n\t};\n}\n\nfunction getPainter(name) {\n\tlet painter = painters[name];\n\t// if (painter == null) throw Error(`No paint defined for \"${name}\"`);\n\treturn painter;\n}\n\nfunction getPainterInstance(painter) {\n\t// Alternate between two instances.\n\t// @TODO should alternate between two *worklets*. Class instances are meaningless for perf.\n\tlet inst = painter.bit ^= 1;\n\treturn painter.instances[inst] || (painter.instances[inst] = new painter.Painter());\n}\n\nfunction paintRuleWalker(rule, context) {\n\tlet css = rule.cssText;\n\n\tif (context.isNew === true && HAS_PAINT.test(css)) {\n\t\tif (css !== (css = escapePaintRules(css))) {\n\t\t\trule = replaceRule(rule, css);\n\t\t}\n\t}\n\n\tlet selector = rule.selectorText,\n\t\tcssText = getCssText(rule.style),\n\t\tindex, key, cached;\n\n\tif (context.counters[selector] == null) {\n\t\tindex = context.counters[selector] = 1;\n\t}\n\telse {\n\t\tindex = ++context.counters[selector];\n\t}\n\tkey = 'sheet' + context.sheetId + '\\n' + selector + '\\n' + index;\n\tif (trackedRules[key] != null) {\n\t\tcached = trackedRules[key];\n\t\tif (cached.selector === selector) {\n\t\t\tcached.rule = rule;\n\t\t\tif (cached.cssText !== cssText) {\n\t\t\t\tcontext.toProcess.push(cached);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcontext.toRemove.push(cached);\n\t}\n\telse {\n\t\tcached = trackedRules[key] = { key, selector, cssText, properties: {}, rule };\n\t\tcontext.toProcess.push(cached.selector);\n\t}\n}\n\nfunction update() {\n\tlet sheets = [].slice.call(document.styleSheets),\n\t\tcontext = {\n\t\t\ttoProcess: [],\n\t\t\ttoRemove: [],\n\t\t\tcounters: {},\n\t\t\tisNew: false,\n\t\t\tsheetId: null\n\t\t};\n\n\tfor (let i=0; i<sheets.length; i++) {\n\t\tlet node = sheets[i].ownerNode;\n\t\tcontext.sheetId = node.$$paintid;\n\t\tcontext.isNew = context.sheetId == null;\n\t\tif (context.isNew) {\n\t\t\tcontext.sheetId = node.$$paintid = ++styleSheetCounter;\n\t\t\t// allow processing to defer parse\n\t\t\tif (processNewSheet(node)===false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\twalkStyles(node.sheet, paintRuleWalker, context);\n\t}\n\n\tfor (let i = context.toRemove.length; i--; ) {\n\t\t// @todo cleanup?\n\t\tdelete trackedRules[context.toRemove[i].key];\n\t}\n\n\tif (context.toProcess.length>0) {\n\t\tprocessItem(context.toProcess.join(', '));\n\t}\n}\n\nfunction walkStyles(sheet, iterator, context) {\n\tlet stack = [[0, sheet.cssRules]],\n\t\tcurrent = stack[0],\n\t\trules = current[1];\n\tif (rules) {\n\t\tfor (let j=0; stack.length>0; j++) {\n\t\t\tif (j>=rules.length) {\n\t\t\t\tstack.pop();\n\t\t\t\tlet len = stack.length;\n\t\t\t\tif (len > 0) {\n\t\t\t\t\tcurrent = stack[len - 1];\n\t\t\t\t\trules = current[1];\n\t\t\t\t\tj = current[0];\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcurrent[0] = j;\n\t\t\tlet rule = rules[j];\n\t\t\tif (rule.type !== 1) {\n\t\t\t\tif (rule.cssRules && rule.cssRules.length>0) {\n\t\t\t\t\tstack.push([0, rule.cssRules]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet r = iterator(rule, context);\n\t\t\tif (r!==undefined) context = r;\n\t\t}\n\t}\n\treturn context;\n}\n\nfunction replaceRule(rule, newRule) {\n\tlet sheet = rule.parentStyleSheet,\n\t\tparent = rule.parentRule,\n\t\trules = (parent || sheet).cssRules,\n\t\tindex = rules.length - 1;\n\tfor (let i=0; i<=index; i++) {\n\t\tif (rules[i] === rule) {\n\t\t\t(parent || sheet).deleteRule(i);\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (newRule!=null) {\n\t\tif (parent) {\n\t\t\tlet index = parent.appendRule(newRule);\n\t\t\treturn parent.cssRules[index];\n\t\t}\n\t\tsheet.insertRule(newRule, index);\n\t\treturn sheet.cssRules[index];\n\t}\n}\n\n// Replace paint(id) with url(data:image/paint-id) for a newly detected stylesheet\nfunction processNewSheet(node, removeUnmatchedRules) {\n\tif (node.href) {\n\t\tfetchText(node.href, processRemoteSheet);\n\t\treturn false;\n\t}\n\n\tfor (let i=node.childNodes.length; i--; ) {\n\t\tlet css = node.childNodes[i].nodeValue;\n\t\tlet escaped = escapePaintRules(css);\n\t\tif (escaped !== css) {\n\t\t\tnode.childNodes[i].nodeValue = escaped;\n\t\t}\n\t}\n}\n\nfunction processRemoteSheet(css) {\n\tlet style = document.createElement('style');\n\tstyle.disabled = true;\n\tstyle.$$paintid = ++styleSheetCounter;\n\tstyle.appendChild(document.createTextNode(escapePaintRules(css)));\n\t(document.head || document.createElement('head')).appendChild(style);\n\tlet sheet = style.sheet,\n\t\ttoDelete = [],\n\t\trule;\n\twalkStyles(sheet, accumulateNonPaintRules, toDelete);\n\twhile ( (rule = toDelete.pop()) ) replaceRule(rule, null);\n\tupdate();\n\tstyle.disabled = false;\n}\n\nfunction accumulateNonPaintRules(rule, nonPaintRules) {\n\tif (!HAS_PAINT.test(rule.cssText)) {\n\t\tnonPaintRules.push(rule);\n\t}\n}\n\nfunction escapePaintRules(css) {\n\treturn css.replace(/(;|,|\\b)paint\\s*\\(\\s*(['\"]?)(.+?)\\2\\s*\\)(;|,|!|\\b)/, '$1url(data:image/paint-$3,=)$4');\n}\n\nlet updateQueue = [];\nfunction queueUpdate(element) {\n\tif (element.$$paintPending===true) return;\n\telement.$$paintPending = true;\n\tif (updateQueue.push(element) === 1) defer(processUpdateQueue);\n}\nfunction processUpdateQueue() {\n\tlet el;\n\twhile ((el = updateQueue.pop())) {\n\t\tmaybeUpdateElement(el);\n\t}\n}\n\nfunction processItem(selector) {\n\tlet sel = document.querySelectorAll(selector);\n\tfor (let i=0; i<sel.length; i++) queueUpdate(sel[i]);\n}\n\nfunction loadImages(images, callback, args) {\n\tlet count = images.length;\n\tlet onload = () => {\n\t\tif (--count) return;\n\t\tcallback.apply(null, args || EMPTY_ARRAY);\n\t};\n\tfor (let i=0; i<images.length; i++) {\n\t\tlet img = new Image();\n\t\timg.onload = onload;\n\t\timg.onerror = onerror;\n\t\timg.src = images[i];\n\t}\n}\n\nfunction ensurePaintId(element) {\n\tlet paintId = element.$$paintId;\n\tif (paintId==null) {\n\t\tpaintId = element.$$paintId = ++idCounter;\n\t\tpatchCssText(element);\n\t}\n\treturn paintId;\n}\n\nfunction getPaintRuleForElement(element) {\n\tlet paintRule = element.$$paintRule,\n\t\tpaintId = ensurePaintId(element);\n\tif (paintRule==null) {\n\t\tif (!element.hasAttribute('data-css-paint')) {\n\t\t\telement.setAttribute('data-css-paint', paintId);\n\t\t}\n\t\tlet index = overrideStyles.insertRule(`[data-css-paint=\"${idCounter}\"] {}`, overrideStyles.cssRules.length);\n\t\tpaintRule = element.$$paintRule = overrideStyles.cssRules[index];\n\t}\n\treturn paintRule;\n}\n\nfunction getCssText(style) {\n\tlet text = style.cssText;\n\tif (text) return text;\n\ttext = '';\n\tfor (let i=0, prop; i<style.length; i++) {\n\t\tprop = style[i];\n\t\tif (i!==0) text += ' ';\n\t\ttext += prop;\n\t\ttext += ':';\n\t\ttext += style.getPropertyValue(prop);\n\t\ttext += ';';\n\t}\n\treturn text;\n}\n\nfunction maybeUpdateElement(element) {\n\tlet computed = getComputedStyle(element);\n\tif (element.$$paintObservedProperties) {\n\t\tfor (let i=0; i<element.$$paintObservedProperties.length; i++) {\n\t\t\tlet prop = element.$$paintObservedProperties[i];\n\t\t\tif (computed.getPropertyValue(prop)!==element.$$paintedPropertyValues[prop]) {\n\t\t\t\tupdateElement(element, computed);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse if (element.$$paintId || HAS_PAINT.test(getCssText(computed))) {\n\t\tupdateElement(element, computed);\n\t\treturn;\n\t}\n\n\telement.$$paintPending = false;\n}\n\nlet currentProperties, propertyContainerCache;\nconst propertiesContainer = {\n\tget(name) {\n\t\tif (name in propertyContainerCache) return propertyContainerCache[name];\n\t\treturn propertyContainerCache[name] = currentProperties.getPropertyValue(name);\n\t}\n};\n\nlet idCounter = 0;\nfunction updateElement(element, computedStyle) {\n\toverridesStylesheet.disabled = true;\n\tlet style = currentProperties = computedStyle==null ? getComputedStyle(element) : computedStyle;\n\t// element.$$paintGeom = style;\n\tpropertyContainerCache = {};\n\tlet paintRule;\n\tlet observedProperties = [];\n\n\telement.$$paintPending = false;\n\n\t// @TODO get computed styles and precompute geometry in a rAF after first paint, then re-use w/ invalidation\n\tlet geom = {\n\t\twidth: parseFloat(propertiesContainer.get('width')),\n\t\theight: parseFloat(propertiesContainer.get('height'))\n\t};\n\n\tlet dpr = getDevicePixelRatio();\n\n\tlet paintedProperties = element.$$paintedProperties;\n\n\tfor (let i=0; i<style.length; i++) {\n\t\tlet property = style[i],\n\t\t\t// value = style.getPropertyValue(property),\n\t\t\tvalue = propertiesContainer.get(property),\n\t\t\treg = /(,|\\b|^)url\\((['\"]?)((?:-moz-element\\(#|-webkit-canvas\\()paint-\\d+-([^;,]+)\\)|(?:data:image\\/paint-|blob:[^'\"#]+#paint=)([^\"';, ]+)[;,].*?)\\2\\)(,|\\b|$)/g,\n\t\t\tnewValue = '',\n\t\t\tindex = 0,\n\t\t\turls = [],\n\t\t\thasChanged = false,\n\t\t\thasPaints = false,\n\t\t\tpaintId,\n\t\t\ttoken;\n\t\twhile ((token = reg.exec(value))) {\n\t\t\tif (hasPaints === false) {\n\t\t\t\tpaintId = ensurePaintId(element);\n\t\t\t}\n\n\t\t\thasPaints = true;\n\t\t\tnewValue += value.substring(0, token.index);\n\t\t\tlet painterName = token[4] || token[5];\n\t\t\tlet currentUri = token[3];\n\t\t\tlet painter = getPainter(painterName);\n\t\t\tif (painter.Painter.inputProperties) {\n\t\t\t\tobservedProperties.push.apply(observedProperties, painter.Painter.inputProperties);\n\t\t\t}\n\t\t\tlet contextOptions = painter.Painter.contextOptions || {};\n\t\t\tlet inst = getPainterInstance(painter);\n\t\t\t\n\t\t\tlet equivalentDpr = contextOptions.scaling===false ? 1 : dpr;\n\n\t\t\tif (contextOptions.nativePixels===true) {\n\t\t\t\tgeom.width *= dpr;\n\t\t\t\tgeom.height *= dpr;\n\t\t\t\tequivalentDpr = 1;\n\t\t\t}\n\n\t\t\tlet actualWidth = equivalentDpr * geom.width,\n\t\t\t\tactualHeight = equivalentDpr * geom.height;\n\t\t\t\n\t\t\tlet ctx = element.$$paintContext,\n\t\t\t\tcssContextId = `paint-${paintId}-${painterName}`;\n\t\t\tif (!ctx || !ctx.canvas || ctx.canvas.width!=actualWidth || ctx.canvas.height!=actualHeight) {\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\t\tctx = document.getCSSCanvasContext('2d', cssContextId, actualWidth, actualHeight);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet canvas = document.createElement('canvas');\n\t\t\t\t\tcanvas.id = cssContextId;\n\t\t\t\t\tcanvas.width = actualWidth;\n\t\t\t\t\tcanvas.height = actualHeight;\n\t\t\t\t\tif (USE_CSS_ELEMENT===true) {\n\t\t\t\t\t\tcanvas.style.display = 'none';\n\t\t\t\t\t\troot.appendChild(canvas);\n\t\t\t\t\t}\n\t\t\t\t\tctx = canvas.getContext('2d');\n\t\t\t\t}\n\t\t\t\telement.$$paintContext = ctx;\n\t\t\t\tctx.imageSmoothingEnabled = false;\n\t\t\t\tif (equivalentDpr!==1) ctx.scale(equivalentDpr, equivalentDpr);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctx.clearRect(0, 0, actualWidth, actualHeight);\n\n\t\t\t\t// This hack is no longer needed thanks to the closePath() fix\n\t\t\t\t// if (USE_CSS_CANVAS_CONTEXT===false) {\n\t\t\t\t// \tctx = ctx.canvas.getContext('2d');\n\t\t\t\t// }\n\t\t\t}\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tinst.paint(ctx, geom, propertiesContainer);\n\t\t\t// Close any open path so clearRect() can dump everything\n\t\t\tctx.closePath();\n\t\t\t// ctx.stroke();  // useful to verify that the polyfill painted rather than native paint().\n\t\t\tctx.restore();\n\t\t\tif ('resetTransform' in ctx) ctx.resetTransform();\n\n\t\t\tnewValue += token[1];\n\n\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\tnewValue += `-webkit-canvas(${cssContextId})`;\n\t\t\t\thasChanged = token[4]==null;\n\t\t\t}\n\t\t\telse if (USE_CSS_ELEMENT===true) {\n\t\t\t\tnewValue += `-moz-element(#${cssContextId})`;\n\t\t\t\thasChanged = token[4] == null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet uri = ctx.canvas.toDataURL('image/png').replace('/png', '/paint-' + painterName);\n\t\t\t\tif (typeof MSBlobBuilder==='function') {\n\t\t\t\t\turi = dataUrlToBlob(uri, painterName);\n\t\t\t\t}\n\t\t\t\t// let uri = ctx.canvas.toDataURL('image/bmp', 1).replace('/bmp', '/paint-' + painterName);\n\t\t\t\turls.push(uri);\n\t\t\t\tnewValue += 'url(\"' + uri + '\")';\n\t\t\t\tif (uri!==currentUri || !paintRule) {\n\t\t\t\t\tlet j = currentUri ? currentUri.indexOf('#') : -1;\n\t\t\t\t\tif (~j) URL.revokeObjectURL(currentUri.substring(0, j));\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\t\t\t\tcurrentUri = uri;\n\t\t\t}\n\n\t\t\tnewValue += token[6];\n\t\t\tindex = token.index + token[0].length;\n\t\t}\n\n\t\tif (hasPaints===false && paintedProperties!=null && paintedProperties[property]!=null) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\t\t\tpaintRule.style.removeProperty(property);\n\t\t\tcontinue;\n\t\t}\n\n\t\tnewValue += value.substring(index);\n\t\tif (hasChanged) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\t\t\tif (paintedProperties==null) {\n\t\t\t\tpaintedProperties = element.$$paintedProperties = {};\n\t\t\t}\n\t\t\tpaintedProperties[property] = true;\n\n\t\t\tif (urls.length===0) {\n\t\t\t\tapplyStyleRule(paintRule.style, property, newValue);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadImages(urls, applyStyleRule, [paintRule.style, property, newValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\telement.$$paintObservedProperties = observedProperties.length===0 ? null : observedProperties;\n\tlet propertyValues = element.$$paintedPropertyValues = {};\n\tfor (let i=0; i<observedProperties.length; i++) {\n\t\tlet prop = observedProperties[i];\n\t\t// use propertyContainer here to select cached values\n\t\tpropertyValues[prop] = propertiesContainer.get(prop);\n\t}\n\n\toverridesStylesheet.disabled = false;\n}\n\nfunction dataUrlToBlob(dataUrl, name) {\n\tlet bin = atob(dataUrl.split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\treturn URL.createObjectURL(new Blob([arr])) + '#paint=' + name;\n}\n\nfunction applyStyleRule(style, property, value) {\n\tstyle.setProperty(property, value, 'important');\n}\n\nfunction patchCssText(element) {\n\tif (supportsStyleMutations===true) return;\n\tif (element.style.ownerElement===element) return;\n\tdefineProperty(element.style, 'ownerElement', { value: element });\n}\n\nclass PaintWorklet {\n\tconstructor() {\n\t\traf(update);\n\n\t\tlet a = document.createElement('x-a');\n\t\tdocument.body.appendChild(a);\n\n\t\tlet lock = false;\n\t\tnew MutationObserver(records => {\n\t\t\tif (lock===true) return;\n\t\t\tlock = true;\n\t\t\tfor (let i = 0; i < records.length; i++) {\n\t\t\t\tlet record = records[i];\n\t\t\t\tif (record.addedNodes) {\n\t\t\t\t\tlet nodes = record.addedNodes;\n\t\t\t\t\tfor (let j = 0; j < nodes.length; j++) {\n\t\t\t\t\t\tif (nodes[j].nodeType === 1) {\n\t\t\t\t\t\t\tqueueUpdate(nodes[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (record.target.nodeType === 1) {\n\t\t\t\t\tqueueUpdate(record.target);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlock = false;\n\t\t}).observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tattributes: true,\n\t\t\tsubtree: true\n\t\t});\n\n\t\ta.style.cssText = 'color: red;';\n\t\tsetTimeout( () => {\n\t\t\tsupportsStyleMutations = '$$paintPending' in a;\n\t\t\tdocument.body.removeChild(a);\n\t\t\tif (!supportsStyleMutations) {\n\t\t\t\tlet cssTextDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'cssText');\n\t\t\t\tlet oldSet = cssTextDesc.set;\n\t\t\t\tcssTextDesc.set = function (value) {\n\t\t\t\t\tif (this.ownerElement) queueUpdate(this.ownerElement);\n\t\t\t\t\treturn oldSet.call(this, value);\n\t\t\t\t};\n\t\t\t\tdefineProperty(CSSStyleDeclaration.prototype, 'cssText', cssTextDesc);\n\t\t\t}\n\t\t});\n\t}\n\n\taddModule(url) {\n\t\tfetchText(url, code => {\n\t\t\tlet context = {\n\t\t\t\tregisterPaint(name, Painter) {\n\t\t\t\t\tregisterPaint(name, Painter, {\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\trealm\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tdefineProperty(context, 'devicePixelRatio', {\n\t\t\t\tget: getDevicePixelRatio\n\t\t\t});\n\t\t\tcontext.self = context;\n\t\t\tlet realm = new Realm(context, root);\n\n\t\t\tcode = (this.transpile || String)(code);\n\n\t\t\trealm.exec(code);\n\t\t});\n\t}\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function Realm(scope, parentElement) {\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999px; width:1px; height:1px;';\n\tparentElement.appendChild(frame);\n\tlet win = frame.contentWindow,\n\t\tdoc = win.document,\n\t\tvars = 'var window,$hook';\n\tfor (let i in win) {\n\t\tif (!(i in scope) && i!=='eval') {\n\t\t\tvars += ',';\n\t\t\tvars += i;\n\t\t}\n\t}\n\tfor (let i in scope) {\n\t\tvars += ',';\n\t\tvars += i;\n\t\tvars += '=self.';\n\t\tvars += i;\n\t}\n\tlet script = doc.createElement('script');\n\tscript.appendChild(doc.createTextNode(\n\t\t`function $hook(self,console) {\"use strict\";\n\t\t${vars};return function() {return eval(arguments[0])}}`\n\t));\n\tdoc.body.appendChild(script);\n\tthis.exec = win.$hook(scope, console);\n\t// this.destroy = () => { parentElement.removeChild(frame); };\n}\n"],"names":["fetchText","url","callback","let","xhr","XMLHttpRequest","onreadystatechange","readyState","responseText","open","send","defineProperty","obj","name","def","Object","get","paintWorklet","window","CSS","PaintWorklet","const","GLOBAL_ID","root","document","createElement","style","cssText","documentElement","appendChild","overridesStylesheet","id","overrideStyles","sheet","testStyles","EMPTY_ARRAY","HAS_PAINT","USE_CSS_CANVAS_CONTEXT","USE_CSS_ELEMENT","backgroundImage","supportsStyleMutations","raf","requestAnimationFrame","setTimeout","defer","Promise","prototype","then","bind","resolve","getDevicePixelRatio","devicePixelRatio","painters","trackedRules","styleSheetCounter","getPainterInstance","painter","inst","bit","instances","Painter","paintRuleWalker","rule","context","css","isNew","test","escapePaintRules","replaceRule","index","key","cached","selector","selectorText","getCssText","counters","sheetId","toProcess","push","toRemove","properties","update","sheets","slice","call","styleSheets","i","length","node","ownerNode","$$paintid","processNewSheet","walkStyles","sel","querySelectorAll","queueUpdate","processItem","join","iterator","stack","cssRules","current","rules","j","pop","len","type","r","undefined","newRule","parentStyleSheet","parent","parentRule","deleteRule","appendRule","insertRule","removeUnmatchedRules","href","processRemoteSheet","childNodes","nodeValue","escaped","disabled","createTextNode","head","toDelete","accumulateNonPaintRules","nonPaintRules","replace","currentProperties","propertyContainerCache","updateQueue","element","$$paintPending","processUpdateQueue","el","maybeUpdateElement","loadImages","images","args","count","onload","apply","img","Image","onerror","src","ensurePaintId","paintId","$$paintId","idCounter","ownerElement","value","patchCssText","getPaintRuleForElement","paintRule","$$paintRule","hasAttribute","setAttribute","text","prop","getPropertyValue","computed","getComputedStyle","$$paintObservedProperties","$$paintedPropertyValues","updateElement","propertiesContainer","computedStyle","observedProperties","geom","width","parseFloat","height","dpr","paintedProperties","$$paintedProperties","property","reg","newValue","urls","hasChanged","hasPaints","token","exec","substring","painterName","currentUri","inputProperties","contextOptions","equivalentDpr","scaling","nativePixels","actualWidth","actualHeight","ctx","$$paintContext","cssContextId","canvas","clearRect","getCSSCanvasContext","display","getContext","imageSmoothingEnabled","scale","save","beginPath","paint","closePath","restore","resetTransform","uri","toDataURL","MSBlobBuilder","dataUrlToBlob","indexOf","URL","revokeObjectURL","applyStyleRule","removeProperty","propertyValues","dataUrl","bin","atob","split","arr","Uint8Array","charCodeAt","createObjectURL","Blob","setProperty","a","body","lock","MutationObserver","records","record","addedNodes","nodes","nodeType","target","observe","removeChild","cssTextDesc","getOwnPropertyDescriptor","CSSStyleDeclaration","oldSet","set","this","addModule","code","worklet","realm","self","scope","parentElement","frame","win","contentWindow","doc","vars","script","transpile","String"],"mappings":"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"}