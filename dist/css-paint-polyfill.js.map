{"version":3,"file":"css-paint-polyfill.js","sources":["../src/util.js","../src/index.js","../src/realm.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Canvas#toBlob() ponyfill */\nexport function canvasToBlob(canvas, callback, type, quality) {\n\tif (canvas.toBlob) return canvas.toBlob(callback, type, quality);\n\n\tlet bin = atob(canvas.toDataURL(type, quality).split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\tcallback(new Blob([arr], { type }));\n}\n\n/** Basically fetch(u).then( r => r.text() ) */\nexport function fetchText(url, callback) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = () => {\n\t\tif (xhr.readyState===4) {\n\t\t\tcallback(xhr.responseText);\n\t\t}\n\t};\n\txhr.open('GET', url, true);\n\txhr.send();\n}\n\n/** Object.defineProperty() ponyfill */\nexport function defineProperty(obj, name, def) {\n\tif (Object.defineProperty) {\n\t\tObject.defineProperty(obj, name, def);\n\t}\n\telse {\n\t\tobj[name] = def.get();\n\t}\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Realm } from './realm';\nimport { defineProperty, fetchText } from './util';\n\nlet paintWorklet;\n\n// Use a getter here (if available) to avoid installing\n// our MutationObserver if the API is never used.\nif (!window.CSS) window.CSS = {};\n\nif (!('paintWorklet' in window.CSS)) {\n\tdefineProperty(window.CSS, 'paintWorklet', {\n\t\tget: () => (paintWorklet || (paintWorklet = new PaintWorklet()))\n\t});\n}\n\nconst GLOBAL_ID = 'css-paint-polyfill';\n\nlet root = document.createElement(GLOBAL_ID);\nroot.style.cssText = 'display: none;';\ndocument.documentElement.appendChild(root);\n\nlet overridesStylesheet = document.createElement('style');\noverridesStylesheet.id = GLOBAL_ID;\noverridesStylesheet.$$isPaint = true;\nroot.appendChild(overridesStylesheet);\nlet overrideStyles = overridesStylesheet.sheet;\nlet testStyles = root.style;\n\nconst EMPTY_ARRAY = [];\nconst HAS_PAINT = /(paint\\(|-moz-element\\(#paint-|-webkit-canvas\\(paint-|[('\"]blob:[^'\"#]+#paint=|[('\"]data:image\\/paint-)/;\nconst USE_CSS_CANVAS_CONTEXT = 'getCSSCanvasContext' in document;\nconst USE_CSS_ELEMENT = (testStyles.backgroundImage = `-moz-element(#${GLOBAL_ID})`) === testStyles.backgroundImage;\nconst HAS_PROMISE = (typeof Promise === 'function');\ntestStyles.cssText = '';\n\nlet supportsStyleMutations = true;\nlet raf = window.requestAnimationFrame || setTimeout;\nlet defer = HAS_PROMISE ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\nlet getDevicePixelRatio = () => window.devicePixelRatio || 1;\n\nlet painters = {};\nlet trackedRules = {};\nlet styleSheetCounter = 0;\n\nfunction registerPaint(name, Painter, worklet) {\n\t// if (painters[name]!=null) throw Error(`registerPaint(${name}): name already registered`);\n\tpainters[name] = {\n\t\tworklet,\n\t\tPainter,\n\t\tproperties: Painter.inputProperties ? [].slice.call(Painter.inputProperties) : [],\n\t\tbit: 0,\n\t\tinstances: []\n\t};\n\tupdate();\n}\n\nfunction getPainter(name) {\n\tlet painter = painters[name];\n\t// if (painter == null) throw Error(`No paint defined for \"${name}\"`);\n\treturn painter;\n}\n\nfunction getPainterInstance(painter) {\n\t// Alternate between two instances.\n\t// @TODO should alternate between two *worklets*. Class instances are meaningless for perf.\n\tlet inst = painter.bit ^= 1;\n\treturn painter.instances[inst] || (painter.instances[inst] = new painter.Painter());\n}\n\nfunction paintRuleWalker(rule, context) {\n\tlet css = rule.cssText;\n\n\tif (context.isNew === true && HAS_PAINT.test(css)) {\n\t\tif (css !== (css = escapePaintRules(css))) {\n\t\t\trule = replaceRule(rule, css);\n\t\t}\n\t}\n\n\tlet selector = rule.selectorText,\n\t\tcssText = getCssText(rule.style),\n\t\tindex, key, cached;\n\n\tif (context.counters[selector] == null) {\n\t\tindex = context.counters[selector] = 1;\n\t}\n\telse {\n\t\tindex = ++context.counters[selector];\n\t}\n\tkey = 'sheet' + context.sheetId + '\\n' + selector + '\\n' + index;\n\tif (trackedRules[key] != null) {\n\t\tcached = trackedRules[key];\n\t\tif (cached.selector === selector) {\n\t\t\tcached.rule = rule;\n\t\t\tif (cached.cssText !== cssText) {\n\t\t\t\tcontext.toProcess.push(cached);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcontext.toRemove.push(cached);\n\t}\n\telse {\n\t\tcached = trackedRules[key] = { key, selector, cssText, properties: {}, rule };\n\t\tcontext.toProcess.push(cached.selector);\n\t}\n}\n\nfunction walk(node, iterator) {\n\titerator(node);\n\tlet child = node.firstElementChild;\n\twhile (child) {\n\t\twalk(child, iterator);\n\t\tchild = child.nextElementSibling;\n\t}\n}\n\nfunction update() {\n\tlet sheets = [].slice.call(document.styleSheets),\n\t\tcontext = {\n\t\t\ttoProcess: [],\n\t\t\ttoRemove: [],\n\t\t\tcounters: {},\n\t\t\tisNew: false,\n\t\t\tsheetId: null\n\t\t};\n\n\tfor (let i=0; i<sheets.length; i++) {\n\t\tlet node = sheets[i].ownerNode;\n\t\tif (node.$$isPaint) continue;\n\n\t\t// Check that we can access the sheet.\n\t\t// The rules binding is required in order to prevent Terser from removing the block.\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tlet rules;\n\t\ttry { rules = node.sheet.cssRules; }\n\t\tcatch (e) { continue; }\n\n\t\tcontext.sheetId = node.$$paintid;\n\t\tcontext.isNew = context.sheetId == null;\n\t\tif (context.isNew) {\n\t\t\tcontext.sheetId = node.$$paintid = ++styleSheetCounter;\n\t\t\t// allow processing to defer parse\n\t\t\tif (processNewSheet(node)===false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\twalkStyles(node.sheet, paintRuleWalker, context);\n\t}\n\n\tfor (let i = context.toRemove.length; i--; ) {\n\t\t// @todo cleanup?\n\t\tdelete trackedRules[context.toRemove[i].key];\n\t}\n\n\tif (context.toProcess.length>0) {\n\t\tprocessItem(context.toProcess.join(', '));\n\t}\n}\n\nfunction walkStyles(sheet, iterator, context) {\n\tlet stack = [[0, sheet.cssRules]],\n\t\tcurrent = stack[0],\n\t\trules = current[1];\n\tif (rules) {\n\t\tfor (let j=0; stack.length>0; j++) {\n\t\t\tif (j>=rules.length) {\n\t\t\t\tstack.pop();\n\t\t\t\tlet len = stack.length;\n\t\t\t\tif (len > 0) {\n\t\t\t\t\tcurrent = stack[len - 1];\n\t\t\t\t\trules = current[1];\n\t\t\t\t\tj = current[0];\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcurrent[0] = j;\n\t\t\tlet rule = rules[j];\n\t\t\tif (rule.type !== 1) {\n\t\t\t\tif (rule.cssRules && rule.cssRules.length>0) {\n\t\t\t\t\tstack.push([0, rule.cssRules]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet r = iterator(rule, context);\n\t\t\tif (r!==undefined) context = r;\n\t\t}\n\t}\n\treturn context;\n}\n\nfunction replaceRule(rule, newRule) {\n\tlet sheet = rule.parentStyleSheet,\n\t\tparent = rule.parentRule,\n\t\trules = (parent || sheet).cssRules,\n\t\tindex = rules.length - 1;\n\tfor (let i=0; i<=index; i++) {\n\t\tif (rules[i] === rule) {\n\t\t\t(parent || sheet).deleteRule(i);\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (newRule!=null) {\n\t\tif (parent) {\n\t\t\tlet index = parent.appendRule(newRule);\n\t\t\treturn parent.cssRules[index];\n\t\t}\n\t\tsheet.insertRule(newRule, index);\n\t\treturn sheet.cssRules[index];\n\t}\n}\n\n// Replace paint(id) with url(data:image/paint-id) for a newly detected stylesheet\nfunction processNewSheet(node) {\n\tif (node.$$isPaint) return;\n\n\tif (node.href) {\n\t\tfetchText(node.href, processRemoteSheet);\n\t\treturn false;\n\t}\n\n\tfor (let i=node.childNodes.length; i--; ) {\n\t\tlet css = node.childNodes[i].nodeValue;\n\t\tlet escaped = escapePaintRules(css);\n\t\tif (escaped !== css) {\n\t\t\tnode.childNodes[i].nodeValue = escaped;\n\t\t}\n\t}\n}\n\nfunction processRemoteSheet(css) {\n\tlet style = document.createElement('style');\n\tstyle.disabled = true;\n\tstyle.$$paintid = ++styleSheetCounter;\n\tstyle.appendChild(document.createTextNode(escapePaintRules(css)));\n\t(document.head || document.createElement('head')).appendChild(style);\n\tlet sheet = style.sheet,\n\t\ttoDelete = [],\n\t\trule;\n\twalkStyles(sheet, accumulateNonPaintRules, toDelete);\n\twhile ( (rule = toDelete.pop()) ) replaceRule(rule, null);\n\tupdate();\n\tstyle.disabled = false;\n}\n\nfunction accumulateNonPaintRules(rule, nonPaintRules) {\n\tif (!HAS_PAINT.test(rule.cssText)) {\n\t\tnonPaintRules.push(rule);\n\t}\n}\n\nfunction escapePaintRules(css) {\n\treturn css.replace(/(;|,|\\b)paint\\s*\\(\\s*(['\"]?)(.+?)\\2\\s*\\)(;|,|!|\\b)/g, '$1url(data:image/paint-$3,=)$4');\n}\n\nlet updateQueue = [];\nfunction queueUpdate(element) {\n\tif (element.$$paintPending===true) return;\n\telement.$$paintPending = true;\n\tif (updateQueue.indexOf(element) === -1 && updateQueue.push(element) === 1) {\n\t\tdefer(processUpdateQueue);\n\t}\n}\nfunction processUpdateQueue() {\n\tlet el;\n\twhile ((el = updateQueue.pop())) {\n\t\tmaybeUpdateElement(el);\n\t}\n}\n\nfunction processItem(selector) {\n\ttry {\n\t\tlet sel = document.querySelectorAll(selector);\n\t\tfor (let i=0; i<sel.length; i++) queueUpdate(sel[i]);\n\t}\n\tcatch (e) {}\n}\n\nfunction loadImages(images, callback, args) {\n\tlet count = images.length;\n\tlet onload = () => {\n\t\tif (--count) return;\n\t\tcallback.apply(null, args || EMPTY_ARRAY);\n\t};\n\tfor (let i=0; i<images.length; i++) {\n\t\tlet img = new Image();\n\t\timg.onload = onload;\n\t\timg.onerror = onerror;\n\t\timg.src = images[i];\n\t}\n}\n\nfunction ensurePaintId(element) {\n\tlet paintId = element.$$paintId;\n\tif (paintId==null) {\n\t\tpaintId = element.$$paintId = ++idCounter;\n\t\tpatchCssText(element);\n\t}\n\treturn paintId;\n}\n\nfunction getPaintRuleForElement(element) {\n\tlet paintRule = element.$$paintRule,\n\t\tpaintId = ensurePaintId(element);\n\tif (paintRule==null) {\n\t\tif (!element.hasAttribute('data-css-paint')) {\n\t\t\telement.setAttribute('data-css-paint', paintId);\n\t\t}\n\t\tlet index = overrideStyles.insertRule(`[data-css-paint=\"${idCounter}\"] {}`, overrideStyles.cssRules.length);\n\t\tpaintRule = element.$$paintRule = overrideStyles.cssRules[index];\n\t}\n\treturn paintRule;\n}\n\nfunction getCssText(style) {\n\tlet text = style.cssText;\n\tif (text) return text;\n\ttext = '';\n\tfor (let i=0, prop; i<style.length; i++) {\n\t\tprop = style[i];\n\t\tif (i!==0) text += ' ';\n\t\ttext += prop;\n\t\ttext += ':';\n\t\ttext += style.getPropertyValue(prop);\n\t\ttext += ';';\n\t}\n\treturn text;\n}\n\nfunction maybeUpdateElement(element) {\n\tlet computed = getComputedStyle(element);\n\tif (element.$$paintObservedProperties) {\n\t\tfor (let i=0; i<element.$$paintObservedProperties.length; i++) {\n\t\t\tlet prop = element.$$paintObservedProperties[i];\n\t\t\tif (computed.getPropertyValue(prop).trim() !== element.$$paintedPropertyValues[prop].trim()) {\n\t\t\t\tupdateElement(element, computed);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse if (element.$$paintId || HAS_PAINT.test(getCssText(computed))) {\n\t\tupdateElement(element, computed);\n\t\treturn;\n\t}\n\n\telement.$$paintPending = false;\n}\n\nlet currentProperties, propertyContainerCache;\nconst propertiesContainer = {\n\tget(name) {\n\t\tif (name in propertyContainerCache) return propertyContainerCache[name];\n\t\treturn propertyContainerCache[name] = currentProperties.getPropertyValue(name);\n\t}\n};\n\nlet idCounter = 0;\nfunction updateElement(element, computedStyle) {\n\toverridesStylesheet.disabled = true;\n\tlet style = currentProperties = computedStyle==null ? getComputedStyle(element) : computedStyle;\n\t// element.$$paintGeom = style;\n\tpropertyContainerCache = {};\n\tlet paintRule;\n\tlet observedProperties = [];\n\n\telement.$$paintPending = false;\n\n\t// @TODO get computed styles and precompute geometry in a rAF after first paint, then re-use w/ invalidation\n\tlet elementGeometry = {\n\t\twidth: element.clientWidth,\n\t\theight: element.clientHeight\n\t};\n\n\tlet dpr = getDevicePixelRatio();\n\n\tlet paintedProperties = element.$$paintedProperties;\n\n\tfor (let i=0; i<style.length; i++) {\n\t\tlet property = style[i],\n\t\t\tvalue = propertiesContainer.get(property),\n\t\t\treg = /(,|\\b|^)url\\((['\"]?)((?:-moz-element\\(#|-webkit-canvas\\()paint-\\d+-([^;,]+)\\)|(?:data:image\\/paint-|blob:[^'\"#]+#paint=)([^\"';, ]+)(?:[;,].*?)?)\\2\\)(;|,|\\s|\\b|$)/g,\n\t\t\tnewValue = '',\n\t\t\tindex = 0,\n\t\t\turls = [],\n\t\t\thasChanged = false,\n\t\t\thasPaints = false,\n\t\t\tpaintId,\n\t\t\ttoken,\n\t\t\tgeom = elementGeometry;\n\t\t\n\t\t// Support CSS Border Images\n\t\tif (/border-image/.test(property)) {\n\t\t\tlet w = geom.width;\n\t\t\tlet h = geom.height;\n\n\t\t\tconst slice = parseCssDimensions(\n\t\t\t\tpropertiesContainer\n\t\t\t\t\t.get('border-image-slice')\n\t\t\t\t\t.replace(/\\sfill/, '')\n\t\t\t\t\t.split(' ')\n\t\t\t);\n\t\t\tw -= applyDimensions(w, slice.left) + applyDimensions(w, slice.right);\n\t\t\th -= applyDimensions(h, slice.top) + applyDimensions(h, slice.bottom);\n\n\t\t\tconst outset = parseCssDimensions(propertiesContainer.get('border-image-outset').split(' '));\n\t\t\tw = applyDimensions(applyDimensions(w, outset.left), outset.right);\n\t\t\th = applyDimensions(applyDimensions(h, outset.top), outset.bottom);\n\n\t\t\tgeom = { width: w, height: h };\n\t\t}\n\n\t\twhile ((token = reg.exec(value))) {\n\t\t\tif (hasPaints === false) {\n\t\t\t\tpaintId = ensurePaintId(element);\n\t\t\t}\n\n\t\t\thasPaints = true;\n\t\t\tnewValue += value.substring(0, token.index);\n\t\t\tlet painterName = token[4] || token[5];\n\t\t\tlet currentUri = token[3];\n\t\t\tlet painter = getPainter(painterName);\n\t\t\tlet contextOptions = painter && painter.Painter.contextOptions || {};\n\t\t\tlet equivalentDpr = contextOptions.scaling === false ? 1 : dpr;\n\n\t\t\tlet inst;\n\t\t\tif (painter) {\n\t\t\t\t// if (!painter) {\n\t\t\t\t// \telement.$$paintPending = true;\n\t\t\t\t// \toverridesStylesheet.disabled = false;\n\t\t\t\t// \t// setTimeout(maybeUpdateElement, 10, element);\n\t\t\t\t// \treturn;\n\t\t\t\t// }\n\t\t\t\tif (painter.Painter.inputProperties) {\n\t\t\t\t\tobservedProperties.push.apply(observedProperties, painter.Painter.inputProperties);\n\t\t\t\t}\n\t\t\t\tinst = getPainterInstance(painter);\n\t\t\t}\n\n\t\t\tif (contextOptions.nativePixels===true) {\n\t\t\t\tgeom.width *= dpr;\n\t\t\t\tgeom.height *= dpr;\n\t\t\t\tequivalentDpr = 1;\n\t\t\t}\n\n\t\t\tlet actualWidth = equivalentDpr * geom.width,\n\t\t\t\tactualHeight = equivalentDpr * geom.height;\n\t\t\t\n\t\t\tlet ctx = element.$$paintContext,\n\t\t\t\tcssContextId = `paint-${paintId}-${painterName}`;\n\t\t\tif (!ctx || !ctx.canvas || ctx.canvas.width!=actualWidth || ctx.canvas.height!=actualHeight) {\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\t\tctx = document.getCSSCanvasContext('2d', cssContextId, actualWidth, actualHeight);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet canvas = document.createElement('canvas');\n\t\t\t\t\tcanvas.id = cssContextId;\n\t\t\t\t\tcanvas.width = actualWidth;\n\t\t\t\t\tcanvas.height = actualHeight;\n\t\t\t\t\tif (USE_CSS_ELEMENT===true) {\n\t\t\t\t\t\tcanvas.style.display = 'none';\n\t\t\t\t\t\troot.appendChild(canvas);\n\t\t\t\t\t}\n\t\t\t\t\tctx = canvas.getContext('2d');\n\t\t\t\t}\n\t\t\t\telement.$$paintContext = ctx;\n\t\t\t\tctx.imageSmoothingEnabled = false;\n\t\t\t\tif (equivalentDpr!==1) ctx.scale(equivalentDpr, equivalentDpr);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctx.clearRect(0, 0, actualWidth, actualHeight);\n\n\t\t\t\t// This hack is no longer needed thanks to the closePath() fix\n\t\t\t\t// if (USE_CSS_CANVAS_CONTEXT===false) {\n\t\t\t\t// \tctx = ctx.canvas.getContext('2d');\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tif (inst) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.beginPath();\n\t\t\t\tinst.paint(ctx, geom, propertiesContainer);\n\t\t\t\t// Close any open path so clearRect() can dump everything\n\t\t\t\tctx.closePath();\n\t\t\t\t// ctx.stroke();  // useful to verify that the polyfill painted rather than native paint().\n\t\t\t\tctx.restore();\n\t\t\t\t// -webkit-canvas() is scaled based on DPI by default, we don't want to reset that.\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===false && 'resetTransform' in ctx) {\n\t\t\t\t\tctx.resetTransform();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewValue += token[1];\n\n\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\tnewValue += `-webkit-canvas(${cssContextId})`;\n\t\t\t\thasChanged = token[4]==null;\n\t\t\t}\n\t\t\telse if (USE_CSS_ELEMENT===true) {\n\t\t\t\tnewValue += `-moz-element(#${cssContextId})`;\n\t\t\t\thasChanged = token[4] == null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet uri = ctx.canvas.toDataURL('image/png').replace('/png', '/paint-' + painterName);\n\t\t\t\tif (typeof MSBlobBuilder==='function') {\n\t\t\t\t\turi = dataUrlToBlob(uri, painterName);\n\t\t\t\t}\n\t\t\t\t// let uri = ctx.canvas.toDataURL('image/bmp', 1).replace('/bmp', '/paint-' + painterName);\n\t\t\t\turls.push(uri);\n\t\t\t\tnewValue += 'url(\"' + uri + '\")';\n\t\t\t\tif (uri!==currentUri || !paintRule) {\n\t\t\t\t\tlet j = currentUri ? currentUri.indexOf('#') : -1;\n\t\t\t\t\tif (~j) URL.revokeObjectURL(currentUri.substring(0, j));\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\t\t\t\tcurrentUri = uri;\n\t\t\t}\n\n\t\t\tnewValue += token[6];\n\t\t\tindex = token.index + token[0].length;\n\t\t}\n\n\t\tif (hasPaints===false && paintedProperties!=null && paintedProperties[property]!=null) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\t\t\tpaintRule.style.removeProperty(property);\n\t\t\tcontinue;\n\t\t}\n\n\t\tnewValue += value.substring(index);\n\t\tif (hasChanged) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\n\t\t\tif (paintedProperties==null) {\n\t\t\t\tpaintedProperties = element.$$paintedProperties = {};\n\t\t\t}\n\t\t\tpaintedProperties[property] = true;\n\n\t\t\tif (property.substring(0, 10) === 'background' && dpr !== 1) {\n\t\t\t\tapplyStyleRule(paintRule.style, 'background-size', `${geom.width}px ${geom.height}px`);\n\t\t\t}\n\n\t\t\tif (urls.length===0) {\n\t\t\t\tapplyStyleRule(paintRule.style, property, newValue);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadImages(urls, applyStyleRule, [paintRule.style, property, newValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\telement.$$paintObservedProperties = observedProperties.length===0 ? null : observedProperties;\n\tlet propertyValues = element.$$paintedPropertyValues = {};\n\tfor (let i=0; i<observedProperties.length; i++) {\n\t\tlet prop = observedProperties[i];\n\t\t// use propertyContainer here to select cached values\n\t\tpropertyValues[prop] = propertiesContainer.get(prop);\n\t}\n\n\toverridesStylesheet.disabled = false;\n}\n\nfunction dataUrlToBlob(dataUrl, name) {\n\tlet bin = atob(dataUrl.split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\treturn URL.createObjectURL(new Blob([arr])) + '#paint=' + name;\n}\n\nfunction applyStyleRule(style, property, value) {\n\tstyle.setProperty(property, value, 'important');\n}\n\nfunction patchCssText(element) {\n\tif (supportsStyleMutations===true) return;\n\tif (element.style.ownerElement===element) return;\n\tdefineProperty(element.style, 'ownerElement', { value: element });\n}\n\n// apply a dimension offset to a base unit value (used for computing border-image sizes)\nfunction applyDimensions(base, dim) {\n\tlet v = parseFloat(dim);\n\tif (!dim) return base;\n\tif (dim.match('px')) return base + v;\n\tif (dim.match('%')) v /= 100;\n\treturn base * v;\n}\n\n// Compute dimensions from a CSS unit group\nfunction parseCssDimensions(arr) {\n\treturn {\n\t\ttop: arr[0],\n\t\tbottom: arr[2] || arr[0],\n\t\tleft: arr[3] || arr[1] || arr[0],\n\t\tright: arr[1] || arr[0]\n\t};\n}\n\nclass PaintWorklet {\n\tconstructor() {\n\t\traf(update);\n\n\t\tlet a = document.createElement('x-a');\n\t\tdocument.body.appendChild(a);\n\n\t\tlet supportsStyleMutations = false;\n\n\t\tlet lock = false;\n\t\tnew MutationObserver(records => {\n\t\t\tif (lock===true) return;\n\t\t\tlock = true;\n\t\t\tfor (let i = 0; i < records.length; i++) {\n\t\t\t\tlet record = records[i], added;\n\t\t\t\tif (record.type === 'childList' && (added = record.addedNodes)) {\n\t\t\t\t\tfor (let j = 0; j < added.length; j++) {\n\t\t\t\t\t\tif (added[j].nodeType === 1) {\n\t\t\t\t\t\t\tqueueUpdate(added[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (record.type==='attributes' && record.target.nodeType === 1) {\n\t\t\t\t\tif (record.target === a) {\n\t\t\t\t\t\tsupportsStyleMutations = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twalk(record.target, queueUpdate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlock = false;\n\t\t}).observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tattributes: true,\n\t\t\tsubtree: true\n\t\t});\n\n\t\ta.style.cssText = 'color: red;';\n\t\tsetTimeout( () => {\n\t\t\tdocument.body.removeChild(a);\n\t\t\tif (!supportsStyleMutations) {\n\t\t\t\tlet styleDesc = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'style');\n\t\t\t\tconst oldStyleGetter = styleDesc.get;\n\t\t\t\tstyleDesc.get = function() {\n\t\t\t\t\tconst style = oldStyleGetter.call(this);\n\t\t\t\t\tstyle.ownerElement = this;\n\t\t\t\t\treturn style;\n\t\t\t\t};\n\t\t\t\tdefineProperty(HTMLElement.prototype, 'style', styleDesc);\n\n\t\t\t\tlet cssTextDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'cssText');\n\t\t\t\tlet oldSet = cssTextDesc.set;\n\t\t\t\tcssTextDesc.set = function (value) {\n\t\t\t\t\tif (this.ownerElement) queueUpdate(this.ownerElement);\n\t\t\t\t\treturn oldSet.call(this, value);\n\t\t\t\t};\n\t\t\t\tdefineProperty(CSSStyleDeclaration.prototype, 'cssText', cssTextDesc);\n\n\t\t\t\tlet setPropertyDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'setProperty');\n\t\t\t\tlet oldSetProperty = setPropertyDesc.value;\n\t\t\t\tsetPropertyDesc.value = function (name, value, priority) {\n\t\t\t\t\tif (this.ownerElement) queueUpdate(this.ownerElement);\n\t\t\t\t\toldSetProperty.call(this, name, value, priority);\n\t\t\t\t};\n\t\t\t\tdefineProperty(CSSStyleDeclaration.prototype, 'setProperty', setPropertyDesc);\n\t\t\t}\n\t\t});\n\t}\n\n\taddModule(url) {\n\t\tlet p, resolve;\n\t\tif (HAS_PROMISE) {\n\t\t\tp = new Promise((r) => resolve = r);\n\t\t}\n\n\t\tfetchText(url, code => {\n\t\t\tlet context = {\n\t\t\t\tregisterPaint(name, Painter) {\n\t\t\t\t\tregisterPaint(name, Painter, {\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\trealm\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tdefineProperty(context, 'devicePixelRatio', {\n\t\t\t\tget: getDevicePixelRatio\n\t\t\t});\n\t\t\tcontext.self = context;\n\t\t\tlet realm = new Realm(context, root);\n\n\t\t\tcode = (this.transpile || String)(code);\n\n\t\t\trealm.exec(code);\n\t\t\tif (resolve) resolve();\n\t\t});\n\n\t\treturn p;\n\t}\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function Realm(scope, parentElement) {\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999px; width:1px; height:1px;';\n\tparentElement.appendChild(frame);\n\tlet win = frame.contentWindow,\n\t\tdoc = win.document,\n\t\tvars = 'var window,$hook';\n\tfor (let i in win) {\n\t\tif (!(i in scope) && i!=='eval') {\n\t\t\tvars += ',';\n\t\t\tvars += i;\n\t\t}\n\t}\n\tfor (let i in scope) {\n\t\tvars += ',';\n\t\tvars += i;\n\t\tvars += '=self.';\n\t\tvars += i;\n\t}\n\tlet script = doc.createElement('script');\n\tscript.appendChild(doc.createTextNode(\n\t\t`function $hook(self,console) {\"use strict\";\n\t\t${vars};return function() {return eval(arguments[0])}}`\n\t));\n\tdoc.body.appendChild(script);\n\tthis.exec = win.$hook(scope, console);\n\t// this.destroy = () => { parentElement.removeChild(frame); };\n}\n"],"names":["fetchText","url","callback","let","xhr","XMLHttpRequest","onreadystatechange","readyState","responseText","open","send","defineProperty","obj","name","def","Object","get","paintWorklet","window","CSS","PaintWorklet","const","GLOBAL_ID","root","document","createElement","style","cssText","documentElement","appendChild","overridesStylesheet","id","$$isPaint","overrideStyles","sheet","testStyles","EMPTY_ARRAY","HAS_PAINT","USE_CSS_CANVAS_CONTEXT","USE_CSS_ELEMENT","backgroundImage","HAS_PROMISE","Promise","raf","requestAnimationFrame","setTimeout","defer","prototype","then","bind","resolve","getDevicePixelRatio","devicePixelRatio","painters","trackedRules","styleSheetCounter","getPainterInstance","painter","inst","bit","instances","Painter","paintRuleWalker","rule","context","css","isNew","test","escapePaintRules","replaceRule","index","key","cached","selector","selectorText","getCssText","counters","sheetId","toProcess","push","toRemove","properties","walk","node","iterator","child","firstElementChild","nextElementSibling","update","sheets","slice","call","styleSheets","i","length","ownerNode","cssRules","e","$$paintid","processNewSheet","walkStyles","sel","querySelectorAll","queueUpdate","processItem","join","stack","current","rules","j","pop","len","type","r","undefined","newRule","parentStyleSheet","parent","parentRule","deleteRule","appendRule","insertRule","href","processRemoteSheet","childNodes","nodeValue","escaped","disabled","createTextNode","head","toDelete","accumulateNonPaintRules","nonPaintRules","replace","currentProperties","propertyContainerCache","updateQueue","element","$$paintPending","indexOf","processUpdateQueue","el","maybeUpdateElement","loadImages","images","args","count","onload","apply","img","Image","onerror","src","ensurePaintId","paintId","$$paintId","idCounter","getPaintRuleForElement","paintRule","$$paintRule","hasAttribute","setAttribute","text","prop","getPropertyValue","computed","getComputedStyle","$$paintObservedProperties","trim","$$paintedPropertyValues","updateElement","propertiesContainer","computedStyle","observedProperties","elementGeometry","width","clientWidth","height","clientHeight","dpr","paintedProperties","$$paintedProperties","property","value","reg","newValue","urls","hasChanged","hasPaints","token","geom","w","h","parseCssDimensions","split","applyDimensions","left","right","top","bottom","outset","exec","substring","painterName","currentUri","contextOptions","equivalentDpr","scaling","inputProperties","nativePixels","actualWidth","actualHeight","ctx","$$paintContext","cssContextId","canvas","clearRect","getCSSCanvasContext","display","getContext","imageSmoothingEnabled","scale","save","beginPath","paint","closePath","restore","resetTransform","uri","toDataURL","MSBlobBuilder","dataUrlToBlob","URL","revokeObjectURL","applyStyleRule","removeProperty","propertyValues","dataUrl","bin","atob","arr","Uint8Array","charCodeAt","createObjectURL","Blob","setProperty","base","dim","v","parseFloat","match","a","body","supportsStyleMutations","lock","MutationObserver","records","record","added","addedNodes","nodeType","target","observe","removeChild","styleDesc","getOwnPropertyDescriptor","HTMLElement","oldStyleGetter","this","ownerElement","cssTextDesc","CSSStyleDeclaration","oldSet","set","setPropertyDesc","oldSetProperty","priority","addModule","p","code","registerPaint","worklet","realm","self","scope","parentElement","frame","win","contentWindow","doc","vars","script","transpile","String"],"mappings":"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"}